// –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ç—É—Ç–æ—Ä–∏–∞–ª –¥–ª—è –∏–≥—Ä—ã

export const tutorialSteps = [
  {
    selector: '#buy-spins-7',
    text: '–ü–µ—Ä–≤—ã–º –¥–µ–ª–æ–º –∫—É–ø–∏—Ç–µ 7 –ø—Ä–æ–∫—Ä—É—Ç–æ–≤ ‚Äî —ç—Ç–æ –≤–∞—à–∏ –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞—É–Ω–¥. –ë–µ–∑ –Ω–∏—Ö –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å!',
    waitFor: 'click',
  },
  {
    selector: '#shop-items',
    text: '–≠—Ç–æ –º–∞–≥–∞–∑–∏–Ω –∞–º—É–ª–µ—Ç–æ–≤. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å –∞–º—É–ª–µ—Ç—ã –∑–∞ —Ç–∞–ª–æ–Ω—ã (üéüÔ∏è), —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã.',
    waitFor: 'next',
  },
  {
    selector: '.stats-grid.compact-stats',
    text: '–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤–∞—à–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏: —Ü–∏–∫–ª, —Ä–∞—É–Ω–¥, –º–æ–Ω–µ—Ç—ã, —Ç–∞–ª–æ–Ω—ã, —É–¥–∞—á–∞. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∏–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–∏–≥—Ä–∞—Ç—å!',
    waitFor: 'next',
  },
  {
    selector: '.controls',
    text: '–í —ç—Ç–æ–π –ø–∞–Ω–µ–ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è, —Å–∫–æ–ª—å–∫–æ —É –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å –ø—Ä–æ–∫—Ä—É—Ç–æ–≤ (—Å–ø–∏–Ω–æ–≤), –∞ —Ç–∞–∫–∂–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞—É–Ω–¥–∞, –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –ª–æ–≥–∞.',
    waitFor: 'next',
  },
  {
    selector: '#slot-machine',
    text: '–≠—Ç–æ —Å–ª–æ—Ç-–º–∞—à–∏–Ω–∞. –ó–¥–µ—Å—å –≤—ã–ø–∞–¥–∞—é—Ç —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–æ—Å—è—Ç –≤–∞–º –º–æ–Ω–µ—Ç—ã.',
    waitFor: 'next',
  },
  {
    selector: '#lever',
    text: '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä—ã—á–∞–≥, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–∫—Ä—É—Ç –∏ –∏—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É!',
    waitFor: 'click',
  },
  {
    selector: '#inventory-items',
    text: '–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤–∞—à–∏ –∞–º—É–ª–µ—Ç—ã. –û–Ω–∏ –¥–∞—é—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±–æ–Ω—É—Å—ã.',
    waitFor: 'next',
  },
  {
    selector: '#bank-balance',
    text: '–≠—Ç–æ –≤–∞—à –±–∞–Ω–∫. –í–Ω–æ—Å–∏—Ç–µ –¥–µ–Ω—å–≥–∏ —Å—é–¥–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç—ã –≤ –Ω–∞—á–∞–ª–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞—É–Ω–¥–∞.',
    waitFor: 'next',
  },
  {
    selector: null,
    text: '–ö–æ–≥–¥–∞ —É –≤–∞—Å –∑–∞–∫–æ–Ω—á–∞—Ç—Å—è –ø—Ä–æ–∫—Ä—É—Ç—ã, –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞—É–Ω–¥. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º!',
    waitFor: 'next',
  },
  {
    selector: '#btn-end-turn',
    text: '–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø—Ä–æ–∫—Ä—É—Ç—ã, —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞—É–Ω–¥ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π!',
    waitFor: 'click',
    waitForSpinsEnd: true,
  },
  {
    selector: null,
    text: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–æ—à–ª–∏ –±–∞–∑–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ. –¢–µ–ø–µ—Ä—å –≤—ã –≥–æ—Ç–æ–≤—ã –∫ –∏–≥—Ä–µ. –£–¥–∞—á–∏!',
    waitFor: 'finish',
  },
];

let tutorialActive = false;
let tutorialStep = 0;
let tutorialOverlay = null;
let highlightEl = null;

function showTutorialStep(stepIdx) {
  removeTutorialOverlay();
  const step = tutorialSteps[stepIdx];
  if (!step) return;

  // –ï—Å–ª–∏ —à–∞–≥ —Ç—Ä–µ–±—É–µ—Ç –¥–æ–∂–¥–∞—Ç—å—Å—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–æ–∫—Ä—É—Ç–æ–≤
  if (step.waitForSpinsEnd) {
    function checkSpins() {
      // DEBUG: –≤—ã–≤–æ–¥–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      console.log('[–¢–£–¢–û–†–ò–ê–õ] checkSpins: tutorialActive=', tutorialActive, 'spinsLeft=', window.state && window.state.spinsLeft, 'tutorialStep=', tutorialStep);
      if (!tutorialActive) return;
      if (window.state && Number(window.state.spinsLeft) === 0) {
        actuallyShowStep(step);
      } else {
        setTimeout(checkSpins, 500);
      }
    }
    checkSpins();
    return;
  }
  actuallyShowStep(step);
}

function actuallyShowStep(step) {
  // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
  if (step.selector) {
    highlightEl = document.querySelector(step.selector);
    if (highlightEl) {
      highlightEl.classList.add('tutorial-highlight');
      highlightEl.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
  }

  // –û–∫–Ω–æ –ø–æ–¥—Å–∫–∞–∑–∫–∏
  tutorialOverlay = document.createElement('div');
  tutorialOverlay.className = 'tutorial-overlay';
  tutorialOverlay.innerHTML = `
    <div class="tutorial-popup">
      <div class="tutorial-text">${step.text}</div>
      <div class="tutorial-actions">
        <button class="tutorial-skip">–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
        ${step.waitFor === 'next' ? '<button class="tutorial-next">–î–∞–ª–µ–µ</button>' : ''}
      </div>
    </div>
  `;
  document.body.appendChild(tutorialOverlay);

  // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ popup —Ä—è–¥–æ–º —Å —ç–ª–µ–º–µ–Ω—Ç–æ–º, –µ—Å–ª–∏ –µ—Å—Ç—å selector
  if (step.selector && highlightEl) {
    const popup = tutorialOverlay.querySelector('.tutorial-popup');
    const rect = highlightEl.getBoundingClientRect();
    const popupRect = { width: 340, height: 140 }; // –ø—Ä–∏–º–µ—Ä–Ω–∞—è —à–∏—Ä–∏–Ω–∞/–≤—ã—Å–æ—Ç–∞
    let top = rect.top + window.scrollY;
    let left = rect.right + 18 + window.scrollX;
    // –ï—Å–ª–∏ –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è —Å–ø—Ä–∞–≤–∞ ‚Äî —Å—Ç–∞–≤–∏–º —Å–Ω–∏–∑—É
    if (left + popupRect.width > window.innerWidth) {
      left = rect.left + window.scrollX;
      top = rect.bottom + 18 + window.scrollY;
    }
    // –ï—Å–ª–∏ –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è —Å–Ω–∏–∑—É ‚Äî —Å—Ç–∞–≤–∏–º —Å–≤–µ—Ä—Ö—É
    if (top + popupRect.height > window.innerHeight + window.scrollY) {
      top = rect.top + window.scrollY - popupRect.height - 18;
    }
    // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
    if (left < 8) left = 8;
    if (top < 8) top = 8;
    popup.style.position = 'absolute';
    popup.style.left = left + 'px';
    popup.style.top = top + 'px';
    popup.style.zIndex = 10002;
  }

  // –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞
  tutorialOverlay.querySelector('.tutorial-skip').onclick = stopTutorial;
  // –ö–Ω–æ–ø–∫–∞ –¥–∞–ª–µ–µ
  if (step.waitFor === 'next') {
    tutorialOverlay.querySelector('.tutorial-next').onclick = () => nextTutorialStep();
  }

  // –û–∂–∏–¥–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (step.waitFor === 'click' && highlightEl) {
    const handler = () => {
      highlightEl.removeEventListener('click', handler, true);
      nextTutorialStep();
    };
    highlightEl.addEventListener('click', handler, true);
  }
}

function removeTutorialOverlay() {
  if (highlightEl) {
    highlightEl.classList.remove('tutorial-highlight');
    highlightEl = null;
  }
  if (tutorialOverlay) {
    tutorialOverlay.remove();
    tutorialOverlay = null;
  }
}

function nextTutorialStep() {
  removeTutorialOverlay();
  tutorialStep++;
  if (tutorialStep >= tutorialSteps.length) {
    stopTutorial();
    return;
  }
  showTutorialStep(tutorialStep);
}

export function startTutorial() {
  tutorialActive = true;
  tutorialStep = 0;
  // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—ã—á–Ω—É—é –∏–≥—Ä—É, –Ω–æ –≤ —Ä–µ–∂–∏–º–µ –æ–±—É—á–µ–Ω–∏—è
  if (window.initGame) window.initGame();
  setTimeout(() => showTutorialStep(0), 600); // –î–∞–µ–º –≤—Ä–µ–º—è UI –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å—Å—è
}

function stopTutorial() {
  tutorialActive = false;
  removeTutorialOverlay();
}

// –°—Ç–∏–ª–∏ –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –∏ –æ–∫–Ω–∞ —Ç—É—Ç–æ—Ä–∏–∞–ª–∞
const style = document.createElement('style');
style.innerHTML = `
.tutorial-highlight {
  outline: 3px solid #ffd600 !important;
  box-shadow: 0 0 16px 4px #ffd60099 !important;
  position: relative;
  z-index: 10001 !important;
}
.tutorial-overlay {
  position: fixed; left: 0; top: 0; width: 100vw; height: 100vh;
  background: rgba(0,0,0,0.25); z-index: 10000; display: flex; align-items: center; justify-content: center;
  pointer-events: none;
}
.tutorial-popup {
  background: #232323; color: #fff; border-radius: 12px; padding: 32px 28px; max-width: 420px; box-shadow: 0 8px 32px #000a; font-size: 1.15em; text-align: center;
  pointer-events: auto;
}
.tutorial-actions { margin-top: 18px; display: flex; gap: 12px; justify-content: center; }
.tutorial-popup button { font-size: 1em; padding: 8px 18px; border-radius: 6px; border: none; background: #ffd600; color: #222; font-weight: bold; cursor: pointer; transition: background 0.2s; }
.tutorial-popup button:hover { background: #ffe066; }
`;
document.head.appendChild(style); 